#!/bin/bash

# Build a Mender package

set -o errexit
set -o pipefail
set -o nounset

if [[ $# -ne 2 ]]
then
    >&2 echo "Error: This script expects two parameters:"
    >&2 echo "       build-mender-packages PACKAGE_NAME PACKAGE_VERSION"
    exit 1
fi

PACKAGE_NAME="${1}"
PACKAGE_VERSION="${2}"

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "${SCRIPT_DIR}/../../edi-pi"

EDI_PI_CONFIG_NAME=pi-cross-dev-v2

if [ ! -f "${EDI_PI_CONFIG_NAME}.yml" ]
then
    EDI_PI_CONFIG_NAME=pi-cross-dev
fi

DEBIAN_RELEASE=$(edi project make --config ${EDI_PI_CONFIG_NAME}.yml | grep debian_distribution_release | cut -d':' -f 2 | xargs)
EXPECTED_PODMAN_IMAGE=mender-dist-packages-builder-debian-${DEBIAN_RELEASE}

# Check for the existance of podman:
podman version > /dev/null

if ! podman image exists ${EXPECTED_PODMAN_IMAGE}
then
    edi -v project make ${EDI_PI_CONFIG_NAME}.yml
    source artifacts/${EDI_PI_CONFIG_NAME}_manifest
    podman tag ${podman_image} mender-dist-packages-builder-debian-${DEBIAN_RELEASE}:latest
    edi -v project make --recursive-clean 3 ${EDI_PI_CONFIG_NAME}.yml
fi


cd "${SCRIPT_DIR}/../../mender-dist-packages"

# Make sure we have a pure Debian armhf environment and add flexiblity to build on arm64 host:
git apply "${SCRIPT_DIR}/../patches/mender/0001-Allow-cross-compilation-on-arm64-use-podman.patch"

declare -a architectures=("amd64" "armhf" "arm64")

if [ "${PACKAGE_NAME}" == "mender-configure" ]
then
    declare -a architectures=("$(dpkg --print-architecture)")
fi

# Prepare source archive:
./docker-build-package debian "${DEBIAN_RELEASE}" "$(dpkg --print-architecture)" "${PACKAGE_NAME}" "${PACKAGE_VERSION}" true

# Build the packages:
for arch in "${architectures[@]}"
do
    ./docker-build-package debian "${DEBIAN_RELEASE}" "${arch}" "${PACKAGE_NAME}" "${PACKAGE_VERSION}"
done

echo "========"
echo "Success!"
echo "========"
